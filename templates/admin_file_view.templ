package templates

import (
	"path/filepath"
	"strconv"
	"github.com/marianozunino/drop/internal/model"
)

templ AdminFileView(file model.AdminFileInfo) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>File Details - Drop Admin</title>
			<script defer src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js"></script>
			<style>
				body {
					font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
					max-width: 800px;
					margin: 0 auto;
					padding: 20px;
					background-color: #f5f5f5;
				}
				.header {
					background: white;
					padding: 20px;
					border-radius: 8px;
					box-shadow: 0 2px 4px rgba(0,0,0,0.1);
					margin-bottom: 20px;
					display: flex;
					justify-content: space-between;
					align-items: center;
				}
				h1 {
					margin: 0;
					color: #333;
				}
				.back-btn {
					background-color: #6c757d;
					color: white;
					padding: 8px 16px;
					text-decoration: none;
					border-radius: 4px;
					font-size: 14px;
				}
				.back-btn:hover {
					background-color: #5a6268;
				}
				.content {
					background: white;
					padding: 30px;
					border-radius: 8px;
					box-shadow: 0 2px 4px rgba(0,0,0,0.1);
					margin-bottom: 20px;
				}
				.file-info {
					display: grid;
					grid-template-columns: 1fr 1fr;
					gap: 20px;
					margin-bottom: 30px;
				}
				.info-group {
					background-color: #f8f9fa;
					padding: 15px;
					border-radius: 6px;
				}
				.info-label {
					font-weight: 600;
					color: #333;
					margin-bottom: 5px;
				}
				.info-value {
					font-family: monospace;
					font-size: 14px;
					color: #666;
				}
				.form-section {
					border-top: 1px solid #eee;
					padding-top: 30px;
				}
				.form-group {
					margin-bottom: 20px;
				}
				label {
					display: block;
					margin-bottom: 5px;
					font-weight: 500;
					color: #333;
				}
				input[type="text"], input[type="datetime-local"], input[type="checkbox"] {
					width: 100%;
					padding: 10px;
					border: 1px solid #ddd;
					border-radius: 4px;
					font-size: 14px;
					box-sizing: border-box;
				}
				input[type="checkbox"] {
					width: auto;
				}
				button {
					background-color: #007bff;
					color: white;
					padding: 10px 20px;
					border: none;
					border-radius: 4px;
					font-size: 14px;
					cursor: pointer;
					margin-right: 10px;
				}
				button:hover {
					background-color: #0056b3;
				}
				.delete-btn {
					background-color: #dc3545;
				}
				.delete-btn:hover {
					background-color: #c82333;
				}
				.file-link {
					background-color: #e3f2fd;
					padding: 15px;
					border-radius: 6px;
					margin-bottom: 20px;
				}
				.file-link a {
					color: #1976d2;
					text-decoration: none;
					font-weight: 500;
				}
				.file-link a:hover {
					text-decoration: underline;
				}
			</style>
		</head>
		<body x-data="fileViewSettings()">
			<div class="header">
				<h1>File Details</h1>
				<a href="/admin" class="back-btn">‚Üê Back to Dashboard</a>
			</div>

			<div class="content">
				<div class="file-link">
					<strong>File URL:</strong> <a href={ templ.URL("/" + filepath.Base(file.ResourcePath)) } target="_blank">/{ filepath.Base(file.ResourcePath) }</a>
				</div>

				<div class="file-info">
					<div class="info-group">
						<div class="info-label">Filename</div>
						<div class="info-value">{ filepath.Base(file.ResourcePath) }</div>
					</div>
					<div class="info-group">
						<div class="info-label">Original Name</div>
						<div class="info-value">{ file.OriginalName }</div>
					</div>
					<div class="info-group">
						<div class="info-label">File Size</div>
						<div class="info-value">{ FormatBytes(file.Size) }</div>
					</div>
					<div class="info-group">
						<div class="info-label">Content Type</div>
						<div class="info-value">{ file.ContentType }</div>
					</div>
					<div class="info-group">
						<div class="info-label">Upload Date</div>
						<div class="info-value">{ file.UploadDate.Format("2006-01-02 15:04:05") }</div>
					</div>
					<div class="info-group">
						<div class="info-label">Expires</div>
						<div class="info-value">
							if file.IsExpired {
								<span style="color: #dc3545; font-weight: bold;">Expired</span>
							} else if file.DaysLeft <= 7 {
								<span style="color: #ffc107; font-weight: bold;">{ strconv.Itoa(file.DaysLeft) } days left</span>
							} else {
								{ strconv.Itoa(file.DaysLeft) } days left
							}
						</div>
					</div>
					<div class="info-group">
						<div class="info-label">One-Time View</div>
						<div class="info-value">
							if file.OneTimeView {
								<span style="color: #dc3545; font-weight: bold;">Yes</span>
							} else {
								<span style="color: #28a745;">No</span>
							}
						</div>
					</div>
					<div class="info-group">
						<div class="info-label">Management Token</div>
						<div class="info-value">{ file.Token }</div>
					</div>
				</div>

				<div class="form-section">
					<h3>Update File Settings</h3>
					<form method="POST">
						<div class="form-group">
							<label for="original_name">Original Name:</label>
							<input type="text" id="original_name" name="original_name" value={ file.OriginalName }/>
						</div>
						
						<div class="form-group">
							<label for="expires">Expiration Date:</label>
							if file.ExpiresAt != nil && !file.ExpiresAt.IsZero() {
								<input type="datetime-local" id="expires" name="expires" value={ file.ExpiresAt.Format("2006-01-02T15:04") }/>
							} else {
								<input type="datetime-local" id="expires" name="expires"/>
							}
						</div>
						
						<div class="form-group">
							<label>
								if file.OneTimeView {
									<input type="checkbox" name="one_time_view" checked/>
								} else {
									<input type="checkbox" name="one_time_view"/>
								}
								One-time view (file deleted after first access)
							</label>
						</div>
						
						<button type="submit">Update File</button>
					</form>
				</div>

				<div style="margin-top: 30px; padding-top: 20px; border-top: 1px solid #eee;">
					<h3>Danger Zone</h3>
					<p style="color: #666; margin-bottom: 15px;">Permanently delete this file. This action cannot be undone.</p>
					<a href={ templ.URL("/admin/file/" + filepath.Base(file.ResourcePath) + "/delete") } class="btn delete-btn" @click="confirmDeleteFile($event)">Delete File</a>
				</div>
			</div>
		</body>
		<script>
			function fileViewSettings() {
				return {
					init() {
						this.loadSettings();
					},

					loadSettings() {
						const saved = localStorage.getItem('adminSettings');
						if (saved) {
							this.settings = JSON.parse(saved);
						} else {
							this.settings = { noConfirmDelete: false };
						}
					},

					confirmDeleteFile(event) {
						if (!this.settings.noConfirmDelete) {
							if (!confirm('Are you sure you want to delete this file? This action cannot be undone.')) {
								event.preventDefault();
							}
						}
					}
				}
			}
		</script>
	</html>
}
